{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element that displays a list of headers.\n\nOn double click on the list the `query-headers` event is dispatched to\nget header definition. When information is handled by the application\nthen it dispays a dialog with header documentation.\nUse `advanced-rest-client/arc-definitions` element to handle queries.\n\nThe `headers` property accepts a HTTP headers string or `Headers` object\nas defined in Fetch spec.\n\n### Example\n\n```html\n<headers-list-view headers=\"Content-Type: application/json\"></headers-list-view>\n```\n\n### Styling\n`<headers-list-view>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--headers-list-view` | Mixin applied to the element | `{}`\n`--arc-font-body1` | Mixin applied to the example section in the details dialog. | `{}`\n`--arc-font-body2` | Mixin applied to the description section in the details dialog. | `{}`\n`--arc-font-code1` | Mixin apllied to the list | `{}`\n`--headers-list-item-min-height` | Min height of the list item. | `20px`\n`--arc-link` | Mixin applied to a link | `{}`",
      "summary": "",
      "path": "headers-list-view.html",
      "properties": [
        {
          "name": "isPayload",
          "type": "boolean",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headers",
          "type": "string",
          "description": "A HTTP headers to display.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_headersChanged\""
            }
          }
        },
        {
          "name": "_headers",
          "type": "Array.<Object>",
          "description": "Parsed headers to the array of headers.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 8
            },
            "end": {
              "line": 122,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "type",
          "type": "string",
          "description": "Type of the header.\nCan be either `request` or `response`.\nIt is required for displaying the help for the headers. The element\nfires the `query-headers` event on double click which requires this\ninformation to be set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 133,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"response\""
        },
        {
          "name": "_hdTitle",
          "type": "string",
          "description": "Header title in the details dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 8
            },
            "end": {
              "line": 137,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_hdBody",
          "type": "string",
          "description": "Header description in the details dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_hdExample",
          "type": "string",
          "description": "Header example in the details dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_linkR",
          "type": "RegExp",
          "description": "A regexp used to match links in headers string.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 156,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "filterHeaders",
          "description": "Filter array of headers and return not duplicated array of the same headers.\nDuplicated headers should be appended to already found one using coma separator.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "Headers array to filter. All objects in headers array must have \"name\"\n               and \"value\" keys."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "An array of filtered headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToString",
          "description": "Parse headers array to Raw HTTP headers string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersArray",
              "type": "(Array | String | Headers)",
              "description": "List of objects with \"name\" and \"value\"\nproperties."
            }
          ],
          "return": {
            "type": "String",
            "desc": "A HTTP representation of the headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headersToJSON",
          "description": "Parse HTTP headers input from string to array of objects containing `name` and `value`\nproperties.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 131,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(String | Headers)",
              "description": "Raw HTTP headers input or Headers object"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "The array of objects where properties are `name` as a header\nname and `value` as a header content."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_headersStringToJSON",
          "description": "Parse headers string to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headersString"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_hedersToJSON",
          "description": "Parse Headers object to array of objects.\nSee `#toJSON` for more info.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 179,
              "column": 4
            },
            "end": {
              "line": 202,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers"
            }
          ],
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_oldCombine",
          "description": "Helper method for old system: combine headers list with encoding value.\nNote that this function will update the original array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "Array",
              "description": "An array of headers"
            },
            {
              "name": "encoding",
              "type": "String",
              "description": "An encoding string from the old request."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if encoding has been added to the array."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getContentType",
          "description": "Get the Content-Type value from the headers.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 255,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String)",
              "description": "Either HTTP headers string or list of headers."
            }
          ],
          "return": {
            "type": "(String | null)",
            "desc": "A content-type header value or null if not found"
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "replaceHeaderValue",
          "description": "Replace value for given header in the headers list.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 266,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "(Array | String | Object)",
              "description": "A headers object. Can be string, array of objects or\nHeaders object."
            },
            {
              "name": "name",
              "type": "String",
              "description": "Header name to be replaced."
            },
            {
              "name": "value",
              "type": "String",
              "description": "Header value to be repleced."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Updated headers."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "getHeaderError",
          "description": "Get error message for given header string.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input",
              "type": "(Header | Array | String)",
              "description": "A headers to check."
            }
          ],
          "return": {
            "type": "?String",
            "desc": "An error message or null if the headers are valid."
          },
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "_headersChanged",
          "description": "The list view requires to add some markup dynamically therefore it cannot\nuse Polymer's replates and binding system.\nHeaqders list is generated manually when headers string has changed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "headers",
              "type": "String",
              "description": "Headers to render"
            }
          ]
        },
        {
          "name": "_clearList",
          "description": "Clears the list of headers.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getMarkup",
          "description": "Creates a markup for a list item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 212,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Headers model item."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Markup for list item."
          }
        },
        {
          "name": "_displayHeaderInfo",
          "description": "Double click on header line handler.\nWill call model for data to display.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_headersQueryEvent",
          "description": "Dispatches `query-headers` custom event handled by `arc-definitions`\ncomponent.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "header",
              "type": "String",
              "description": "Header name to query"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Event's detail object"
          }
        },
        {
          "name": "_analyticsEvent",
          "description": "Dispatches analytics event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 4
            },
            "end": {
              "line": 278,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "action",
              "type": "String",
              "description": "Event action"
            },
            {
              "name": "label",
              "type": "String",
              "description": "Event label"
            }
          ]
        },
        {
          "name": "_autoLink",
          "description": "Finds URLs in input string and adds anchors tags.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "input"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 106,
          "column": 2
        },
        "end": {
          "line": 301,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.HeadersListView",
      "attributes": [
        {
          "name": "is-payload",
          "description": "Set to true when the request can carry a payload.\nIt's required for calculating headers errors.",
          "sourceRange": {
            "file": "bower_components/headers-parser-behavior/headers-parser-behavior.html",
            "start": {
              "line": 56,
              "column": 8
            },
            "end": {
              "line": 56,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "ArcBehaviors.HeadersParserBehavior"
        },
        {
          "name": "headers",
          "description": "A HTTP headers to display.",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 8
            },
            "end": {
              "line": 116,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "type",
          "description": "Type of the header.\nCan be either `request` or `response`.\nIt is required for displaying the help for the headers. The element\nfires the `query-headers` event on double click which requires this\ninformation to be set.",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 8
            },
            "end": {
              "line": 133,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "headers-list-view",
      "mixins": [
        "ArcBehaviors.HeadersParserBehavior"
      ]
    }
  ]
}
